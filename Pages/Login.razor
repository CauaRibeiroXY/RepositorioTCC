@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using RepositorioTCC.Data
@inject UserServices userServices
@inject IJSRuntime JsRuntime
@inject NavigationManager navigationManager
@inject StateContainer stateContainer
@inject RepositorioTCCAuthenticationStateProvider RepositorioTCCAuthenticationStateProvider


<div class="login-wrap">
  <h2 class="titulo">Login</h2>
  
  <div class="form">
    <input class="teste" type="email" placeholder="Email" id="email" @bind-value="@email" />
    <input class="teste" type="password" placeholder="Senha" id="password" @bind-value="@password" />
    <button class="login"@onclick="LoginAsync"> Login </button>
    <button class="login" @onclick="GoToCadastro"> Cadastrar </button>
  </div>
</div>

@code {
    private User user = new User();

    string email;
    string password;

    @* private async Task HandleValidSubmit(User user)
    {
        User result = await userServices.Login(user);

        if (result != null)
        {
            stateContainer.user = result;
            navigationManager.NavigateTo("/tccs");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Usuário ou senha inválidos");
        }
    } *@

    public async Task LoginAsync(){
        
        await RepositorioTCCAuthenticationStateProvider.LoginAsync(email, password);

        if(RepositorioTCCAuthenticationStateProvider.CurrentUser.Email is not null) {
            navigationManager.NavigateTo("/tccs");
        }
    }

    public async Task GoToCadastro(){
            navigationManager.NavigateTo("/cadastro");
    }
}



 

