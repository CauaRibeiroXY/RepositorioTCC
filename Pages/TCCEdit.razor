@page "/tccs/editar/{Id:int}"
@inject TccDB.TccServices service
@inject NavigationManager NavigationManager

<h3>Editar TCC</h3>

@if (Tcc != null)
{
    <div class="form-group">
        <label for="titulo">Título:</label>
        <input id="titulo" class="form-control" @bind="Tcc.Titulo" />
    </div>
    <div class="form-group">
        <label for="autor">Autor:</label>
        <input id="autor" class="form-control" @bind="Tcc.Autor" />
    </div>
    <div class="form-group">
        <label for="orientador">Orientador:</label>
        <input id="orientador" class="form-control" @bind="Tcc.Orientador" />
    </div>
    <div class="form-group">
        <label for="ano">Ano:</label>
        <input id="ano" class="form-control" @bind="Tcc.Ano" />
    </div>
    <div class="form-group">
        <label for="palavrasChave">Palavras-chave:</label>
        <input id="palavrasChave" class="form-control" @bind="Tcc.PalavrasChave" />
    </div>
    <div class="form-group">
        <label for="resumo">Resumo:</label>
        <textarea id="resumo" class="form-control" @bind="Tcc.Resumo"></textarea>
    </div>

    <button style="margin-top: 1rem; margin-right: 1rem;" @onclick="SalvarTcc" class="btn btn-success">Salvar</button>
}
else
{
    <p>TCC não encontrado.</p>
}

<button style="margin-top: 1rem; margin-right: 1rem;" @onclick="Voltar" class="btn btn-secondary">Voltar</button>

@code {
    [Parameter]
    public int Id { get; set; }

    private Tcc Tcc;

    protected override async Task OnInitializedAsync()
    {
        Tcc = await service.GetTccPorIdAsync(Id);
    }

    private async Task SalvarTcc()
    {
        await service.AtualizarTccAsync(Tcc);
        NavigationManager.NavigateTo("/tccs");
    }

    private void Voltar()
    {
        NavigationManager.NavigateTo("/tccs");
    }
}
